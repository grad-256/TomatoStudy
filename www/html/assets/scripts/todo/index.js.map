{"version":3,"sources":["webpack:///./src/todo/index.ts"],"names":[],"mappings":"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","file":"./todo/index.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unnecessary-type-assertion */\n/* eslint-disable @typescript-eslint/no-floating-promises */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport 'tslib'\n\n{\n  // @ts-ignore\n  const token = document.querySelector('#app')?.dataset.token\n  const input = document.querySelector('[name=\"title\"]')\n  const ul = document.querySelector('ul')\n  // @ts-ignore\n  input.focus()\n  // @ts-ignore\n  ul.addEventListener('click', (e) => {\n    // @ts-ignore\n\n    if (e.target.type === 'checkbox') {\n      fetch('?action=toggle', {\n        method: 'POST',\n        headers: {\n          // 'Content-Type': 'application/json',\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          // @ts-ignore\n          id: e.target.parentNode.dataset.id,\n          ticket: token,\n        }),\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error('This todo has been deleted!')\n          }\n\n          return response.json()\n        })\n        .then((json) => {\n          // @ts-ignore\n\n          if (json.is_done !== e.target.checked) {\n            alert('This Todo has been updated. UI is being updated.')\n            // @ts-ignore\n            e.target.checked = json.is_done\n          }\n        })\n        .catch((err) => {\n          alert(err.message)\n          location.reload()\n        })\n    }\n    // @ts-ignore\n\n    if (e.target.classList.contains('delete')) {\n      if (!confirm('Are you sure?')) {\n        return\n      }\n\n      fetch('?action=delete', {\n        method: 'POST',\n        body: new URLSearchParams({\n          // @ts-ignore\n\n          id: e.target.parentNode.dataset.id,\n          ticket: token,\n        }),\n      })\n      // @ts-ignore\n\n      e.target.parentNode.remove()\n    }\n  })\n\n  // @ts-ignore\n  function addTodo(id, titleValue) {\n    const li = document.createElement('li')\n    li.dataset.id = id\n    const checkbox = document.createElement('input')\n    checkbox.type = 'checkbox'\n    const title = document.createElement('span')\n    title.textContent = titleValue\n    const deleteSpan = document.createElement('span')\n    deleteSpan.textContent = 'x'\n    deleteSpan.classList.add('delete')\n\n    li.appendChild(checkbox)\n    li.appendChild(title)\n    li.appendChild(deleteSpan)\n    // @ts-ignore\n\n    ul.insertBefore(li, ul.firstChild)\n  }\n  // @ts-ignore\n\n  document.querySelector('form').addEventListener('submit', (e) => {\n    e.preventDefault()\n    // @ts-ignore\n\n    const title = input.value\n\n    fetch('?action=add', {\n      method: 'POST',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        title: title,\n        ticket: token,\n      }),\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        addTodo(json.id, title)\n      })\n    // @ts-ignore\n\n    input.value = ''\n    // @ts-ignore\n\n    input.focus()\n\n    console.log('Finish!')\n  })\n\n  const purge = document.querySelector('.purge')\n  // @ts-ignore\n\n  purge.addEventListener('click', () => {\n    if (!confirm('Are you sure?')) {\n      return\n    }\n\n    fetch('?action=purge', {\n      method: 'POST',\n      headers: {\n        // 'Content-Type': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        ticket: token,\n      }),\n    })\n\n    const lis = document.querySelectorAll('li')\n    lis.forEach((li) => {\n      // @ts-ignore\n\n      if (li.children[0].checked) {\n        li.remove()\n      }\n    })\n  })\n}\n"],"sourceRoot":""}